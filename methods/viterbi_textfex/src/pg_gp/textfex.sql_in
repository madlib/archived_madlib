CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.textfex_generatemrtbl(integer, boolean) RETURNS void AS $$
DECLARE nlabel int;
BEGIN       
         PERFORM MADLIB_SCHEMA.__load_crf_model(); 
         EXECUTE 'TRUNCATE textfex_segment_hashtbl, textfex_unknown_segment_hashtbl, prev_textfex_label, textfex_mtbl, textfex_rtbl';

        --Calcuate the number of labels in the label space
        -- EXECUTE 'SELECT COUNT(*) INTO nlabel FROM textfex_label';
        
        IF $2 = TRUE THEN 
		INSERT INTO textfex_segment_hashtbl(seg_text)
		((SELECT DISTINCT seg_text
		  FROM   textfex_segmenttbl
		  WHERE  doc_id = $1)
		 EXCEPT
		 (SELECT DISTINCT seg_text
		  FROM   textfex_segmenttbl
		  WHERE  doc_id <> $1)
		);
                
                INSERT INTO textfex_unknown_segment_hashtbl(seg_text)
                SELECT seg_text
                FROM   textfex_segment_hashtbl;
        ELSE 
		EXECUTE 'INSERT INTO textfex_segment_hashtbl(seg_text)
		SELECT DISTINCT seg_text
		FROM   textfex_segmenttbl';

                INSERT INTO textfex_unknown_segment_hashtbl(seg_text)
                ((SELECT DISTINCT seg_text
                  FROM   textfex_segment_hashtbl)
                 EXCEPT
		 (SELECT DISTINCT token
		  FROM   textfex_dictionary
		  WHERE  textfex_dictionary.total>1)
                );
        END IF; 

        INSERT INTO prev_textfex_label
        SELECT textfex_label.id
        FROM   textfex_label;
        INSERT INTO prev_textfex_label VALUES(-1);
        INSERT INTO prev_textfex_label VALUES(nlabel);

        -- Generate sparse M factor table
        INSERT INTO textfex_mtbl(prev_label, label, value)
        SELECT prev_label.id, label.id, 0 
        FROM   textfex_label as label,
               prev_textfex_label as prev_label;

        -- EdgeFeature and startFeature, startFeature can be considered as a special edgeFeature  
        INSERT INTO textfex_mtbl(prev_label, label, value)
        SELECT prev_label_id,label_id,weight
	FROM   textfex_feature AS features
	WHERE  features.prev_label_id<>-1 OR features.name = 'S.';

        --EndFeature, endFeature can be considered as a special edgeFeature
        INSERT INTO textfex_mtbl(prev_label, label, value)
        SELECT nlabel,label_id,weight
	FROM   textfex_feature AS features
	WHERE  features.name = 'End.';

        INSERT INTO viterbi_mtbl
        SELECT pg_catalog.array_agg(weight)
        FROM   (SELECT prev_label, label, (SUM(value)*1000)::integer AS weight
	        FROM   textfex_mtbl
                GROUP BY prev_label,label
                ORDER BY prev_label,label) as TEMP_MTBL;

	INSERT INTO textfex_rtbl(seg_text, label, value)
	SELECT segment_hashtbl.seg_text, labels.id, 0
	FROM   textfex_segment_hashtbl segment_hashtbl, 
	       textfex_label as labels;

	-- RegExFeature
	INSERT INTO textfex_rtbl(seg_text, label, value)
	SELECT segment_hashtbl.seg_text, features.label_id, features.weight
	FROM   textfex_segment_hashtbl AS segment_hashtbl, 
	       textfex_feature AS features, 
	       textfex_regex AS regex
	WHERE  segment_hashtbl.seg_text ~ regex.pattern
	       AND features.name||'%' ='R_' || regex.name;

        -- LexiconFeature
        INSERT INTO textfex_rtbl(seg_text, label, value)
        SELECT segment_hashtbl.seg_text, features.label_id, features.weight
        FROM   textfex_segment_hashtbl AS segment_hashtbl, 
               textfex_feature AS features,
               textfex_lexicon
        WHERE  features.name = 'L_' || filename
               AND lexicon = upper(segment_hashtbl.seg_text);
       
	-- UnknownFeature
	INSERT INTO textfex_rtbl(seg_text, label, value)
	SELECT segment_hashtbl.seg_text, features.label_id, features.weight
	FROM   textfex_unknown_segment_hashtbl AS segment_hashtbl,
	       textfex_feature AS features
	WHERE  features.name = 'U';

	-- Wordfeature
        IF $2 = FALSE THEN
		INSERT INTO textfex_rtbl(seg_text, label, value)
		SELECT segment_hashtbl.seg_text, features.label_id, features.weight
		FROM   textfex_segment_hashtbl AS segment_hashtbl,
		       textfex_feature AS features
		WHERE  features.name = 'W_' || segment_hashtbl.seg_text;
        END IF;

	-- Factor table
	INSERT INTO viterbi_rtbl(seg_text, label, score)
	SELECT seg_text,label,SUM(value) AS score
	FROM   textfex_rtbl
	GROUP BY seg_text,label;

        IF $2 = TRUE THEN
		-- insert the new sentence to the viterbi_segmenttbl
		INSERT INTO viterbi_segmenttbl(doc_id, seg_id, start_pos, seg_text,max_pos)
		SELECT doc_id,-1,start_pos,seg_text,max_pos
		FROM   textfex_segmenttbl
		WHERE  doc_id = $1;
		analyze viterbi_segmenttbl;
        ELSE
		-- insert the all sentences in the training dataset to the viterbi_segmenttbl
		INSERT INTO viterbi_segmenttbl(doc_id, seg_id, start_pos, seg_text, max_pos)
		SELECT doc_id,-1,start_pos,seg_text,max_pos
		FROM   textfex_segmenttbl;
		analyze viterbi_segmenttbl;
        END IF;
END
$$ LANGUAGE plpgsql;
