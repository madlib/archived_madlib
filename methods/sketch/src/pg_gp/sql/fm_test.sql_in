--------------------------------------------------------------------------------
-- Sketches tests
--------------------------------------------------------------------------------

DROP SCHEMA IF EXISTS madlib_installcheck CASCADE;
CREATE SCHEMA madlib_installcheck;

SET search_path TO madlib_installcheck,MADLIB_SCHEMA;

--------------------------------------------------------------------------------
-- Create some test data
--------------------------------------------------------------------------------
---------------------------------------------------------------------------
-- Test
---------------------------------------------------------------------------
-- test function
CREATE FUNCTION install_test() RETURNS VOID AS $$ 
declare
	
	result INT[];
	result2 INT;
	
begin
	DROP TABLE IF EXISTS data;
	CREATE TABLE data(class INT, a1 INT); 
	INSERT INTO data SELECT 1,1 FROM generate_series(1,10000);
	INSERT INTO data SELECT 1,2 FROM generate_series(1,15000);
	INSERT INTO data SELECT 1,3 FROM generate_series(1,10000);
	INSERT INTO data SELECT 2,5 FROM generate_series(1,1000);
	INSERT INTO data SELECT 2,6 FROM generate_series(1,1000);

	DROP TABLE IF EXISTS result_table;
	CREATE TABLE result_table AS
	SELECT (MADLIB_SCHEMA.fmsketch_dcount(a1)) as val FROM data GROUP BY data.class ORDER BY data.class;

	SELECT array_agg(result_table.val) INTO result FROM result_table;	
	IF ((result[1] + result[2]) != 5) THEN
		RAISE EXCEPTION 'Incorrect fmsketch_dcount results, got %',result;
	END IF;
	TRUNCATE result_table;	
	
	
	RAISE INFO 'FM-Sketches install checks passed';
	RETURN;
	
end 
$$ language plpgsql;

SELECT install_test();

-- tests for "little" tables using sortasorts
select fmsketch_dcount(R.i)
  from generate_series(1,100) AS R(i),
       generate_series(1,3) AS T(i);

select fmsketch_dcount(CAST('2010-10-10' As date) + CAST((R.i || ' days') As interval))
  from generate_series(1,100) AS R(i),
       generate_series(1,3) AS T(i);

select fmsketch_dcount(R.i::float)
  from generate_series(1,100) AS R(i),
       generate_series(1,3) AS T(i);

select fmsketch_dcount(R.i::text)
  from generate_series(1,100) AS R(i),
       generate_series(1,3) AS T(i);


-- tests for "big" tables
select fmsketch_dcount(T.i)
  from generate_series(1,3) AS R(i),
       generate_series(1,20000) AS T(i);

select fmsketch_dcount(CAST('2010-10-10' As date) + CAST((T.i || ' days') As interval))
  from generate_series(1,3) AS R(i),
       generate_series(1,20000) AS T(i);

select fmsketch_dcount(T.i::float)
  from generate_series(1,3) AS R(i),
       generate_series(1,20000) AS T(i);

select fmsketch_dcount(T.i::text)
  from generate_series(1,3) AS R(i),
       generate_series(1,20000) AS T(i);

-- tests for all-NULL column
select fmsketch_dcount(NULL::integer) from generate_series(1,10000) as R(i);


--------------------------------------------------------------------------------
-- Cleanup
--------------------------------------------------------------------------------
DROP SCHEMA IF EXISTS madlib_installcheck CASCADE;