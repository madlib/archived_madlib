---------------------------------------------------------------------------
-- Rules: 
-- ------
-- Any DB objects should be created w/o schema prefix,
-- since this file is executed in a separate schema context.
---------------------------------------------------------------------------

---------------------------------------------------------------------------
-- Setup: 
---------------------------------------------------------------------------
SELECT setseed( extract( epoch from current_timestamp)-floor( extract( epoch from current_timestamp)));

SELECT * FROM MADLIB_SCHEMA.kmeans_sample_data( 
    2,      -- # of dimensions
    10,     -- # of clusters
    100,    -- # of points per cluster
    1000,   -- max value of a cluster coordinate
    10,     -- average width of a cluster in every dimension
    'km_testdata'
);

---------------------------------------------------------------
-- Test
---------------------------------------------------------------
-- Run k-means using random() seeding 
SELECT * FROM MADLIB_SCHEMA.kmeans( 
    'km_testdata', 'coords', null 	
    , 'random', 10, 'l1norm' 			
    , 5, 0.001, True 			
    , 'km_points', 'km_cents', True 
    , True				
);

-- Run k-means using kmeans++() seeding 
SELECT * FROM MADLIB_SCHEMA.kmeans( 
    'km_testdata', 'coords', null 	
    , 'kmeans++', 1, 10, 'l2norm' 			
    , 5, 0.001, True 			
    , 'km_points', 'km_cents', True 
    , True				
);


-- Run k-means using canopy() seeding 
SELECT * FROM MADLIB_SCHEMA.kmeans( 
    'km_testdata', 'coords', null 	
    , 'canopy', 5, null, null, 'cosine' 			
    , 5, 0.001, True 			
    , 'km_points', 'km_cents', True 
    , True				
);

-- Show results
-- SELECT cid, count(*) FROM km_points GROUP BY 1;

-- Try a view with FLOAT[]
CREATE VIEW km_testdata_float123 
AS SELECT coords::float[] AS coords FROM km_testdata;

CREATE TABLE mycents AS SELECT * FROM km_cents;

SELECT * FROM MADLIB_SCHEMA.kmeans( 
    'km_testdata_float123', 'coords', null
    , 'mycents', 'coords'
    , 'tanimoto'
    , 5, 0.001, True
    , 'km_points', 'km_cents', True
    , True
);

-- Show results
SELECT cid, count(*) FROM km_points GROUP BY 1;