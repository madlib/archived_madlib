/* -----------------------------------------------------------------------------
 * Test probability functions.
 * -------------------------------------------------------------------------- */

-- chi_squared_cdf
SELECT assert(
    chi_squared_cdf(NULL, 1) IS NULL AND
    chi_squared_cdf(1, NULL) IS NULL,
    'Chi-Squared CDF: Wrong handling of NULLs.'
);

SELECT assert(
    isnan(chi_squared_cdf('NaN', 1) ) AND
    isnan(chi_squared_cdf(1, 'NaN') ),
    'Chi-Squared CDF: Wrong handling of NaNs.'
);

SELECT assert(
    chi_squared_cdf(-1, 1) = 0 AND
    chi_squared_cdf(0, 1) = 0 AND
    chi_squared_cdf('Inf', 1) = 1 AND
    abs(chi_squared_cdf(1, 1) - 0.6826895) < 1e-5,
    'Chi-Squared CDF: Wrong handling regular values'
);

select assert(
    check_if_raises_error($$SELECT chi_squared_cdf(1.5, 0)$$),
    'Chi-Squared CDF: degree of freedom equal to 0 does not raise error.'
);

select assert(
    check_if_raises_error($$SELECT chi_squared_cdf(1.5, -1)$$),
    'Chi-Squared CDF: degree of freedom less than 0 does not raise error.'
);

-- chi_squared_pdf
SELECT assert(
    chi_squared_pdf(NULL, 1) IS NULL AND
    chi_squared_pdf(1, NULL) IS NULL,
    'Chi-Squared PDF: Wrong handling of NULLs.'
);

SELECT assert(
    isnan(chi_squared_pdf('NaN', 1) ) AND
    isnan(chi_squared_pdf(1, 'NaN') ),
    'Chi-Squared PDF: Wrong handling of NaNs.'
);

SELECT assert(
    chi_squared_pdf(-1, 1) = 0 AND
    chi_squared_pdf(0, 1) = 'Inf' AND
    chi_squared_pdf(0, 2) = 0.5 AND
    chi_squared_pdf(0, 3) = 0 AND
    chi_squared_pdf('Inf', 1) = 0 AND
    abs(chi_squared_pdf(1, 1) - 0.2419707) < 1e-5,
    'Chi-Squared PDF: Wrong handling regular values'
);

select assert(
    check_if_raises_error($$SELECT chi_squared_pdf(1.5, 0)$$),
    'Chi-Squared PDF: freedom equal to 0 does not raise error.'
);

select assert(
    check_if_raises_error($$SELECT chi_squared_pdf(1.5, -1)$$),
    'Chi-Squared PDF: degree of freedom less than 0 does not raise error.'
);

-- chi_squared_quantile
SELECT assert(
    chi_squared_quantile(NULL, 1) IS NULL AND
    chi_squared_quantile(1, NULL) IS NULL,
    'Chi-Squared Quantile: Wrong handling of NULLs.'
);

SELECT assert(
    isnan(chi_squared_quantile('NaN', 1) ) AND
    isnan(chi_squared_quantile(1, 'NaN') ),
    'Chi-Squared Quantile: Wrong handling of NaNs.'
);

SELECT assert(
    chi_squared_quantile(0, 1) = 0 AND
    chi_squared_quantile(0, 2) = 0 AND
    chi_squared_quantile(0, 3) = 0 AND
    chi_squared_quantile(1, 1) = 'Inf' AND
    abs(chi_squared_quantile(0.5, 1) - 0.4549364) < 1e-5,
    'Chi-Squared Quantile: Wrong handling regular values'
);

select assert(
    check_if_raises_error($$SELECT chi_squared_quantile(-1, 2)$$),
    'Chi-Squared Quantile: non-positive CDF does not raise error.'
); 

select assert(
    check_if_raises_error($$SELECT chi_squared_quantile(1.5, 0)$$),
    'Chi-Squared Quantile: freedom equal to 0 does not raise error.'
);

select assert(
    check_if_raises_error($$SELECT chi_squared_quantile(1.5, -1)$$),
    'Chi-Squared Quantile freedom less than 0 does not raise error.'
);

-- student_t_cdf
SELECT assert(
    student_t_cdf(NULL, 1) IS NULL AND
    student_t_cdf(1, NULL) IS NULL,
    'Student-t CDF: Wrong handling of NULLs.'
);

SELECT assert(
    isnan( student_t_cdf('NaN', 1) ) AND
    isnan( student_t_cdf(1, 'NaN') ),
    'Student-t CDF: Wrong handling of NaNs.'
);

SELECT assert(
    relative_error(student_t_cdf(0, 1000001), 0.5) < 0.0001 AND
    abs(student_t_cdf(1, 1000001) + student_t_cdf(-1, 1000001) - 1.0) < 0.001 AND
    
    relative_error(student_t_cdf(0, 201), 0.5) < 0.0001 AND
    abs(student_t_cdf(1, 201) + student_t_cdf(-1, 201) - 1.0) < 0.001 AND
    
    relative_error(student_t_cdf(0, 5), 0.5) < 0.0001 AND
    abs(student_t_cdf(1, 5) + student_t_cdf(-1, 5) - 1.0) < 0.001 AND
    
    relative_error(student_t_cdf(0, 4.5), 0.5) < 0.0001 AND
    abs(student_t_cdf(1, 4.5) + student_t_cdf(-1, 4.5) - 1.0) < 0.001,
    
    'Student-t CDF: Distribution is not symmetric.'
);

SELECT assert(
    relative_error(student_t_cdf(1, 1), 1.0/2 + 1.0/pi() * atan(1)) < 0.0001 AND
    relative_error(student_t_cdf(-1, 1), 1.0/2 + 1.0/pi() * atan(-1)) < 0.0001 AND
    relative_error(student_t_cdf(2, 1), 1.0/2 + 1.0/pi() * atan(2)) < 0.0001 AND
    relative_error(student_t_cdf(-2, 1), 1.0/2 + 1.0/pi() * atan(-2)) < 0.0001 AND
    relative_error(student_t_cdf(4, 1), 1.0/2 + 1.0/pi() * atan(4)) < 0.0001 AND
    relative_error(student_t_cdf(-4, 1), 1.0/2 + 1.0/pi() * atan(-4)) < 0.0001 AND
    
    relative_error(student_t_cdf(1, 2), 1.0/2 * (1. + 1/sqrt(2 + 1^2))) < 0.0001 AND
    relative_error(student_t_cdf(-1, 2), 1.0/2 * (1. - 1/sqrt(2 + 1^2))) < 0.0001 AND
    relative_error(student_t_cdf(2, 2), 1.0/2 * (1. + 2/sqrt(2 + 2^2))) < 0.0001 AND
    relative_error(student_t_cdf(-2, 2), 1.0/2 * (1. - 2/sqrt(2 + 2^2))) < 0.0001 AND
    relative_error(student_t_cdf(4, 2), 1.0/2 * (1. + 4/sqrt(2 + 4^2))) < 0.0001 AND
    relative_error(student_t_cdf(-4, 2), 1.0/2 * (1. - 4/sqrt(2 + 4^2))) < 0.0001,
    
    'Student-t CDF: Wrong values for special case nu in {1,2}.'
);

SELECT assert(
        check_if_raises_error($$SELECT student_t_cdf(1, 0)$$) AND
    NOT check_if_raises_error($$SELECT student_t_cdf(1, 1)$$),
    'Student-t CDF: Non-positive degree of freedom (nu) does not raise error.'
);

-- student_t_pdf
SELECT assert(
    student_t_pdf(NULL, 1) IS NULL AND
    student_t_pdf(1, NULL) IS NULL,
    'Student-t PDF: Wrong handling of NULLs.'
);

SELECT assert(
    isnan( student_t_pdf('NaN', 1) ) AND
    isnan( student_t_pdf(1, 'NaN') ),
    'Student-t PDF: Wrong handling of NaNs.'
);

SELECT assert(
    abs(student_t_pdf(1, 1) - 0.1591549) < 1e-5 AND
    abs(student_t_pdf(-1, 1) - 0.1591549) < 1e-5 AND
    abs(student_t_pdf(2, 1) - 0.06366198) < 1e-5 AND
    abs(student_t_pdf(-2, 1) - 0.06366198) < 1e-5 AND
    abs(student_t_pdf(4, 1) - 0.01872411) < 1e-5 AND
    abs(student_t_pdf(-4, 1) - 0.01872411) < 1e-5 AND

    abs(student_t_pdf(1, 2) - 0.1924501) < 1e-5 AND
    abs(student_t_pdf(-1, 2) - 0.1924501) < 1e-5 AND
    abs(student_t_pdf(2, 2) - 0.06804138) < 1e-5 AND
    abs(student_t_pdf(-2, 2) - 0.06804138) < 1e-5 AND
    abs(student_t_pdf(4, 2) - 0.01309457) < 1e-5 AND
    abs(student_t_pdf(-4, 2) - 0.01309457) < 1e-5,
    
    'Student-t PDF: Wrong values for special case nu in {1,2}.'
);

SELECT assert(
	check_if_raises_error($$SELECT student_t_pdf(1, 0)$$) AND
    NOT check_if_raises_error($$SELECT student_t_pdf(1, 1)$$),
    'Student-t PDF: Non-positive degree of freedom (nu) does not raise error.'
);

-- student_t_quantile
SELECT assert(
    student_t_quantile(NULL, 1) IS NULL AND
    student_t_quantile(1, NULL) IS NULL,
    'Student-t Quantile: Wrong handling of NULLs.'
);

SELECT assert(
    isnan( student_t_quantile('NaN', 1) ) AND
    isnan( student_t_quantile(1, 'NaN') ),
    'Student-t Quantile: Wrong handling of NaNs.'
);

SELECT assert(
    student_t_quantile(1, 1) = 'Inf' AND
    abs(student_t_quantile(0.9, 1) - 3.077684) < 1e-5 AND
    student_t_quantile(0, 1) = '-Inf' And

    student_t_quantile(1, 2) = 'Inf' AND
    abs(student_t_quantile(0.9, 2) - 1.885618) < 1e-5 AND
    student_t_quantile(0, 2) = '-Inf',
    
    'Student-t Quantile: Wrong values for special case nu in {1,2}.'
);

SELECT assert(
	check_if_raises_error($$SELECT student_t_quantile(1, 0)$$) AND
    NOT check_if_raises_error($$SELECT student_t_quantile(1, 1)$$),
    'Student-t Quantile: Non-positive degree of freedom (nu) does not raise error.'
);

SELECT assert(
	check_if_raises_error($$SELECT student_t_quantile(-1, 1)$$) AND
	check_if_raises_error($$SELECT student_t_quantile(2, 1)$$),
    'Student-t Quantile: Out range [0,1] of CDF does not raise error.'
); 

-- normal_cdf
select assert(
    normal_cdf(NULL, 0, 1) IS NULL AND
    normal_cdf(0, NULL, 1) IS NULL AND
    normal_cdf(0, 0, NULL) IS NULL,
    'Normal CDF: Wrong handling of NULLs.' 
);

select assert(
    isnan(normal_cdf('NaN', 0, 1)) AND
    isnan(normal_cdf(0, 'NaN', 1)) AND
    isnan(normal_cdf(0, 0, 'NaN')),
    'Normal CDF: Wrong handling of NaNs.' 
);

select assert(
    abs(normal_cdf(0.5, 0, 1) - 0.6914625) < 1e-5 AND
    abs(normal_cdf(-0.5, 0, 1) - 0.3085375) < 1e-5 AND
    abs(normal_cdf(0, 0, 1) - 0.5) < 1e-5 AND
    abs(normal_cdf('Infinity', 0, 1) - 1) < 1e-5 AND
    abs(normal_cdf('-Infinity', 0, 1) - 0) < 1e-5,
    'Normal CDF: Wrong values with mu = 0, signma = 1.'
);

select assert(
    abs(normal_cdf(0.5, -1, 2) - 0.7733726) < 1e-5 AND
    abs(normal_cdf(-0.5, -1, 2) - 0.5987063) < 1e-5 AND
    abs(normal_cdf(0, -1, 2) - 0.6914625) < 1e-5 AND
    abs(normal_cdf('Infinity', -1, 2) - 1) < 1e-5 AND
    abs(normal_cdf('-Infinity', -1, 2) - 0) < 1e-5,
    'Normal CDF: Wrong values with mu = -1, signma = 2.'
);

select assert(
    check_if_raises_error($$SELECT normal_cdf(0.5, -2, -1)$$),
    'Normal CDF: Non-positive sigma does not raise error.'
);

-- normal_pdf
CREATE OR REPLACE FUNCTION _test_normal_pdf(t float8, mu float8, sigma float8) RETURNS float8 AS $$
    select exp(-1*($1 - $2)^2/(2*($3^2)))/sqrt(2*pi()*$3^2);
$$LANGUAGE 'sql' STRICT IMMUTABLE;

select assert(
    normal_pdf(NULL, 0, 1) IS NULL AND
    normal_pdf(0, NULL, 1) IS NULL AND
    normal_pdf(0, 0, NULL) IS NULL,
    'Normal PDF: Wrong handling of NULLs.' 
);

select assert(
    isnan(normal_pdf('NaN', 0, 1)) AND
    isnan(normal_pdf(0, 'NaN', 1)) AND
    isnan(normal_pdf(0, 0, 'NaN')),
    'Normal PDF: Wrong handling of NaNs.' 
);

select assert(
    abs(normal_pdf(0.5, 0, 1) - _test_normal_pdf(0.5, 0, 1)) < 1e-5 AND
    abs(normal_pdf(-0.5, 0, 1) - _test_normal_pdf(-0.5, 0, 1)) < 1e-5 AND
    abs(normal_pdf(0, 0, 1) - _test_normal_pdf(0, 0, 1)) < 1e-5 AND
    abs(normal_pdf('Infinity', 0, 1) - 0) < 1e-5 AND
    abs(normal_pdf('-Infinity', 0, 1) - 0) < 1e-5,
    'Normal PDF: Wrong values with mu = 0, signma = 1.'
);

select assert(
    abs(normal_pdf(0.5, -1, 2) - _test_normal_pdf(0.5, -1, 2)) < 1e-5 AND
    abs(normal_pdf(-0.5, -1, 2) - _test_normal_pdf(-0.5, -1, 2)) < 1e-5 AND
    abs(normal_pdf(0, -1, 2) - _test_normal_pdf(0, -1, 2)) < 1e-5 AND
    abs(normal_pdf('Infinity', -1, 2) - 0) < 1e-5 AND
    abs(normal_pdf('-Infinity', -1, 2) - 0) < 1e-5,
    'Normal PDF: Wrong values with mu = -1, signma = 2.'
);

select assert(
    check_if_raises_error($$SELECT normal_pdf(0.5, -2, -1)$$),
    'Normal PDF: Non-positive sigma does not raise error.'
);

DROP FUNCTION _test_normal_pdf(t float8, mu float8, sigma float8);

-- normal_quantile
select assert(
    normal_quantile(NULL, 0, 1) IS NULL AND
    normal_quantile(0, NULL, 1) IS NULL AND
    normal_quantile(0, 0, NULL) IS NULL,
    'Normal Quantile: Wrong handling of NULLs.' 
);

select assert(
    isnan(normal_quantile('NaN', 0, 1)) AND
    isnan(normal_quantile(0, 'NaN', 1)) AND
    isnan(normal_quantile(0, 0, 'NaN')),
    'Normal Quantile: Wrong handling of NaNs.' 
);

select assert(
	normal_quantile(1, 0, 1) = 'Inf'::float8,
	'Normal Quantile: Wrong value for CDF = 1'
);

select assert(
	normal_quantile(0, 0, 1) = '-Inf'::float8,
	'Normal Quantile: Wrong value for CDF = 0'
);


select assert(
    abs(normal_quantile(0.5, 0, 1) - 0) < 1e-5 AND
    abs(normal_quantile(0.6, 0, 1) - 0.2533471) < 1e-5 AND
    normal_quantile(0, 0, 1) = '-Inf', 
    'Normal Quantile: Wrong values with mu = 0, signma = 1.'
);

select assert(
    abs(normal_quantile(0.5, -1, 2) - -1) < 1e-5 AND
    abs(normal_quantile(0.6, -1, 2) - -0.4933058) < 1e-5 AND
    normal_quantile(0, -1, 2) = '-inf',
    'Normal Quantile: Wrong values with mu = -1, signma = 2.'
);

select assert(
    check_if_raises_error($$SELECT normal_quantile(0.5, -2, -1)$$),
    'Normal Quantile: Non-positive sigma does not raise error.'
);

select assert(
    check_if_raises_error($$SELECT normal_quantile(-0.5, -2, 1)$$),
    'Normal Quantile: Non-positive CDF does not raise error.'
);

select assert(
    check_if_raises_error($$SELECT normal_quantile(1.5, -2, 1)$$),
    'Normal Quantile: CDF bigger than 1 does not raise error.'
);

-- fisher_f_cdf
SELECT assert(
    fisher_f_cdf(NULL, 1, 1) IS NULL AND
    fisher_f_cdf(1, NULL, 1) IS NULL AND
    fisher_f_cdf(1, 1, NULL) IS NULL,
    'Fisher F CDF: Wrong handling of NULLs.'
);

SELECT assert(
    isnan(fisher_f_cdf('NaN', 1, 1) ) AND
    isnan(fisher_f_cdf(1, 'NaN', 1) ) AND
    isnan(fisher_f_cdf(1, 1, 'NaN') ),
    'Fisher F CDF: Wrong handling of NaNs.'
);

SELECT assert(
    fisher_f_cdf(-1, 1, 1) = 0 AND
    fisher_f_cdf(0, 1, 1) = 0 AND
    fisher_f_cdf('Inf', 1, 1) = 1 AND
    abs(fisher_f_cdf(1, 1, 1) - 0.5) < 1e-5 AND

    fisher_f_cdf(-1, 1, 2) = 0 AND
    fisher_f_cdf(0, 1, 2) = 0 AND
    fisher_f_cdf('Inf', 1, 2) = 1 AND
    abs(fisher_f_cdf(1, 1, 2) - 0.5773503) < 1e-5,

    'Fisher F CDF: Wrong handling regular values'
);

select assert(
    check_if_raises_error($$SELECT fisher_f_cdf(1.5, 0, 1)$$) AND
    check_if_raises_error($$SELECT fisher_f_cdf(1.5, 1, 0)$$) AND
    check_if_raises_error($$SELECT fisher_f_cdf(1.5, -1, 1)$$) AND
    check_if_raises_error($$SELECT fisher_f_cdf(1.5, 1, -1)$$),

    'Fisher F CDF: parameters less or equal to 0 does not raise error.'
);

-- fisher_f_pdf
SELECT assert(
    fisher_f_pdf(NULL, 1, 1) IS NULL AND
    fisher_f_pdf(1, NULL, 1) IS NULL AND
    fisher_f_pdf(1, 1, NULL) IS NULL,
    'Fisher F PDF: Wrong handling of NULLs.'
);

SELECT assert(
    isnan(fisher_f_pdf('NaN', 1, 1) ) AND
    isnan(fisher_f_pdf(1, 'NaN', 1) ) AND
    isnan(fisher_f_pdf(1, 1, 'NaN') ),
    'Fisher F PDF: Wrong handling of NaNs.'
);

SELECT assert(
    fisher_f_pdf(-1, 1, 1) = 0 AND
    fisher_f_pdf(0, 1, 1) = 'Inf' AND
    fisher_f_pdf('Inf', 1, 1) = 0 AND
    abs(fisher_f_pdf(1, 1, 1) - 0.1591549) < 1e-5 AND

    fisher_f_pdf(-1, 2, 1) = 0 AND
    fisher_f_pdf(0, 2, 1) = 1 AND
    fisher_f_pdf('Inf', 2, 1) = 0 AND
    abs(fisher_f_pdf(1, 2, 1) -  0.1924501) < 1e-5 AND

    fisher_f_pdf(-1, 3, 1) = 0 AND
    fisher_f_pdf(0, 3, 1) = 0 AND
    fisher_f_pdf('Inf', 3, 1) = 0 AND
    abs(fisher_f_pdf(1, 3, 1) -  0.2067483) < 1e-5,

    'Fisher F PDF: Wrong handling regular values'
);

select assert(
    check_if_raises_error($$SELECT fisher_f_pdf(1.5, 0, 1)$$) AND
    check_if_raises_error($$SELECT fisher_f_pdf(1.5, 1, 0)$$) AND
    check_if_raises_error($$SELECT fisher_f_pdf(1.5, -1, 1)$$) AND
    check_if_raises_error($$SELECT fisher_f_pdf(1.5, 1, -1)$$),

    'Fisher F PDF: parameters less or equal to 0 does not raise error.'
);

-- fisher_f_quantile
SELECT assert(
    fisher_f_quantile(NULL, 1, 1) IS NULL AND
    fisher_f_quantile(1, NULL, 1) IS NULL AND
    fisher_f_quantile(1, 1, NULL) IS NULL,
    'Fisher F Quantile: Wrong handling of NULLs.'
);

SELECT assert(
    isnan(fisher_f_quantile('NaN', 1, 1) ) AND
    isnan(fisher_f_quantile(1, 'NaN', 1) ) AND
    isnan(fisher_f_quantile(1, 1, 'NaN') ),
    'Fisher F Quantile: Wrong handling of NaNs.'
);

SELECT assert(
    fisher_f_quantile(0, 1, 1) = 0 AND
    fisher_f_quantile(1, 1, 1) = 'Inf' AND
    abs(fisher_f_quantile(0.8, 1, 1) - 9.472136) < 1e-5 AND

    fisher_f_quantile(0, 2, 1) = 0 AND
    fisher_f_quantile(1, 2, 1) = 'Inf' AND
    abs(fisher_f_quantile(0.8, 2, 1) -  12) < 1e-5 AND

    fisher_f_quantile(0, 3, 1) = 0 AND
    fisher_f_quantile(1, 3, 1) = 'inf' AND
    abs(fisher_f_quantile(0.8, 3, 1) -  13.06393) < 1e-5,

    'Fisher F Quantile: Wrong handling regular values'
);

select assert(
    check_if_raises_error($$SELECT fisher_f_quantile(1.5, 0, 1)$$) AND
    check_if_raises_error($$SELECT fisher_f_quantile(1.5, 1, 0)$$) AND
    check_if_raises_error($$SELECT fisher_f_quantile(1.5, -1, 1)$$) AND
    check_if_raises_error($$SELECT fisher_f_quantile(1.5, 1, -1)$$),

    'Fisher F Quantile: parameters less or equal to 0 does not raise error.'
);

select assert(
    check_if_raises_error($$SELECT fisher_f_quantile(-1, 1, 1)$$) AND
    check_if_raises_error($$SELECT fisher_f_quantile(2, 1, 1)$$) ,

    'Fisher F Quantile: CDF out of range [0,1] does not raise error.'
);

-- beta_cdf
SELECT assert(
    beta_cdf(NULL, 1, 1) IS NULL AND
    beta_cdf(1, NULL, 1) IS NULL AND
    beta_cdf(1, 1, NULL) IS NULL,
    'Beta CDF: Wrong handling of NULLs.'
);

SELECT assert(
    isnan(beta_cdf('NaN', 1, 1) ) AND
    isnan(beta_cdf(1, 'NaN', 1) ) AND
    isnan(beta_cdf(1, 1, 'NaN') ),
    'Beta CDF: Wrong handling of NaNs.'
);

SELECT assert(
    beta_cdf(-1, 1, 1) = 0 AND
    beta_cdf(0, 1, 1) = 0 AND
    beta_cdf(1, 1, 1) = 1 AND
    beta_cdf('Inf', 1, 1) = 1 AND
    abs(beta_cdf(0.5, 1, 1) - 0.5) < 1e-5 AND

    beta_cdf(-1, 1, 2) = 0 AND
    beta_cdf(0, 1, 2) = 0 AND
    beta_cdf(1, 1, 2) = 1 AND
    beta_cdf('Inf', 1, 2) = 1 AND
    abs(beta_cdf(1, 1, 2) - 1) < 1e-5,

    'Beta CDF: Wrong handling regular values'
);

select assert(
    check_if_raises_error($$SELECT beta_cdf(0.5, 0, 1)$$) AND
    check_if_raises_error($$SELECT beta_cdf(0.5, 1, 0)$$) AND
    check_if_raises_error($$SELECT beta_cdf(0.5, -1, 1)$$) AND
    check_if_raises_error($$SELECT beta_cdf(0.5, 1, -1)$$),

    'Beta CDF: parameters less or equal to 0 does not raise error.'
);

-- beta_pdf
SELECT assert(
    beta_pdf(NULL, 1, 1) IS NULL AND
    beta_pdf(1, NULL, 1) IS NULL AND
    beta_pdf(1, 1, NULL) IS NULL,
    'Beta PDF: Wrong handling of NULLs.'
);

SELECT assert(
    isnan(beta_pdf('NaN', 1, 1) ) AND
    isnan(beta_pdf(1, 'NaN', 1) ) AND
    isnan(beta_pdf(1, 1, 'NaN') ),
    'Beta PDF: Wrong handling of NaNs.'
);

SELECT assert(
    beta_pdf(-1, 1, 1) = 0 AND
    beta_pdf(-0.1, 1, 1) = 0 AND
    beta_pdf(1.1, 1, 1) = 0 AND
    beta_pdf('Inf', 1, 1) = 0 AND
    abs(beta_pdf(0.5, 1, 1) - 1) < 1e-5 AND

    beta_pdf(-1, 2, 1) = 0 AND
    beta_pdf(-0.1, 2, 1) = 0 AND
    beta_pdf(1.1, 2, 1) = 0 AND
    beta_pdf('Inf', 2, 1) = 0 AND
    abs(beta_pdf(0.5, 2, 1) -  1) < 1e-5 ,

    'Beta PDF: Wrong handling regular values'
);

select assert(
    check_if_raises_error($$SELECT beta_pdf(0.5, 0, 1)$$) AND
    check_if_raises_error($$SELECT beta_pdf(0.5, 1, 0)$$) AND
    check_if_raises_error($$SELECT beta_pdf(0.5, -1, 1)$$) AND
    check_if_raises_error($$SELECT beta_pdf(0.5, 1, -1)$$),

    'Beta PDF: parameters less or equal to 0 does not raise error.'
);

-- beta_quantile
SELECT assert(
    beta_quantile(NULL, 1, 1) IS NULL AND
    beta_quantile(1, NULL, 1) IS NULL AND
    beta_quantile(1, 1, NULL) IS NULL,
    'Beta Quantile: Wrong handling of NULLs.'
);

SELECT assert(
    isnan(beta_quantile('NaN', 1, 1) ) AND
    isnan(beta_quantile(1, 'NaN', 1) ) AND
    isnan(beta_quantile(1, 1, 'NaN') ),
    'Beta Quantile: Wrong handling of NaNs.'
);

SELECT assert(
    beta_quantile(0, 1, 1) = 0 AND
    beta_quantile(1, 1, 1) = 1 AND
    abs(beta_quantile(0.8, 1, 1) - 0.8) < 1e-5 AND

    beta_quantile(0, 2, 1) = 0 AND
    beta_quantile(1, 2, 1) = 1 AND
    abs(beta_quantile(0.8, 2, 1) -  0.8944272) < 1e-5 ,

    'Beta Quantile: Wrong handling regular values'
);

select assert(
    check_if_raises_error($$SELECT beta_quantile(0.5, 0, 1)$$) AND
    check_if_raises_error($$SELECT beta_quantile(0.5, 1, 0)$$) AND
    check_if_raises_error($$SELECT beta_quantile(0.5, -1, 1)$$) AND
    check_if_raises_error($$SELECT beta_quantile(0.5, 1, -1)$$),

    'Beta Quantile: parameters less or equal to 0 does not raise error.'
);

select assert(
    check_if_raises_error($$SELECT beta_quantile(-1, 1, 1)$$) AND
    check_if_raises_error($$SELECT beta_quantile(2, 1, 1)$$) ,

    'Beta Quantile: CDF out of range [0,1] does not raise error.'
);
